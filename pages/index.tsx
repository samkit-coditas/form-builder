import Head from "next/head";
import CustomForm from "@/components/customForm";
import * as yup from "yup";

export default function Home() {
  const schema = yup.object().shape(
    {
      firstName: yup
        .string()
        .trim()
        .required("This field is required")
        .matches(
          /^([^0-9]*)$/g,
          "Numbers not allowed. Please enter a valid name"
        ),
      lastName: yup
        .string()
        .trim()
        .required("This field is required")
        .matches(
          /^([^0-9]*)$/g,
          "Numbers not allowed. Please enter a valid name"
        ),
      userType: yup.string().required("This field is required"),
      country: yup.object().required("This field is required"),
      requestType: yup.string().required("This field is required"),
      email: yup
        .string()
        .email("Invalid email address")
        .when(["phone"], (phone, schema) => {
          return phone[0]
            ? schema
            : schema.required("Email or Phone is required");
        }),
      phone: yup
        .string()
        .matches(/^(\+\d{1,3}[- ]?)?\d{10}$/, "Invalid phone number")
        .when(["email"], (email, schema) => {
          return email[0]
            ? schema
            : schema.required("Email or Phone is required");
        }),
      requestDetails: yup
        .string()
        .trim()
        .required("This field is required")
        .max(5000),
      termsAggred: yup
        .boolean()
        .oneOf([true], "You must agree to the terms and conditions")
        .required("This field is required"),
    },
    [["phone", "email"]]
  );

  const fields = [
    {
      name: "userType",
      label: "I am a (an)",
      type: "button-group",
      options: [
        { value: "employee", label: "Employee" },
        { value: "provider", label: "Provider" },
        { value: "esti", label: "Esthetician" },
        { value: "client", label: "Client/Consumer" },
        { value: "marketingRecipient", label: "Marketing Recipient" },
      ],
    },
    {
      name: "country",
      label: "Country",
      type: "select",
      options: [
        { value: "australia", label: "Australia" },
        { value: "canada", label: "Canada" },
        { value: "china", label: "China" },
        { value: "france", label: "France" },
        { value: "germany", label: "Germany" },
        { value: "hongKong", label: "Hong Kong" },
        { value: "india", label: "India" },
        { value: "ireland", label: "Ireland" },
        { value: "newZealand", label: "New Zealand" },
        { value: "portugal", label: "Portugal" },
        { value: "singapore", label: "Singapore" },
        { value: "spain", label: "Spain" },
        { value: "uk", label: "United Kingdom" },
        { value: "us", label: "United States" },
        { value: "other", label: "My Country is Not Listed" },
      ],
    },
    {
      name: "requestType",
      label: "Choose Request Type",
      type: "button-group",
      options: [
        { value: "access", label: "Access Request" },
        { value: "info", label: "Info Request" },
        { value: "update", label: "Update Request" },
        { value: "restrict", label: "Restriction Request" },
        { value: "delete", label: "Deletion Request" },
        {
          value: "marketingUnsubscribe",
          label: "Object/Marketing Unsubscribe",
        },
      ],
    },
    {
      name: "firstName",
      label: "First Name",
      type: "text",
    },
    {
      name: "lastName",
      label: "Last Name",
      type: "text",
    },
    {
      name: "email",
      label: "Your Email",
      type: "text",
    },
    {
      name: "phone",
      label: "Your Phone Number",
      type: "text",
    },
    {
      name: "requestDetails",
      label: "Request Details",
      type: "textarea",
    },
    {
      name: "termsAggred",
      label: "I agree to the terms and conditions",
      type: "checkbox",
    },
  ];

  const onSubmit = (data: any) => {
    console.log(data);
  };

  return (
    <>
      <Head>
        <title>Custom Form Builder</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <CustomForm fields={fields} onSubmit={onSubmit} schema={schema} />
      </main>
    </>
  );
}
